#BlueJ class context
comment0.target=KeyValidator
comment0.text=\n\ Key\:\n\ Core\:\ \ \ \ \ \ \ Method\ must\ report\ whether\ the\ key\ is\ valid,\ or\n\ \ \ \ \ \ \ \ \ \ \ \ \ report\ that\ it\ is\ invalid\ and\ give\ one\ reason\ why\ it\ is\ invalid.\n\ \ \ \ \ \ \ \ \ \ \ \ \ To\ be\ valid,\ the\ key\ must\n\ \ \ \ \ \ \ \ \ \ \ \ \ -\ be\ at\ least\ 7\ characters\ and\ at\ most\ 20\ characters\ long,\n\ \ \ \ \ \ \ \ \ \ \ \ \ -\ not\ start\ with\ the\ special\ characters\ '\#'\ or\ '_',\n\ \ \ \ \ \ \ \ \ \ \ \ \ -\ not\ have\ a\ space\ character\ anywhere\n\ \ \ \ \ \ \ \ \ \ \ \ \n\ Completion\:\ Method\ should\ either\ report\ that\ the\ key\ is\ valid,\ or\n\ \ \ \ \ \ \ \ \ \ \ \ \ report\ that\ it\ is\ invalid\ and\ list\ ALL\ the\ reasons\ that\ it\ is\ invalid.\n\ \ \ \ \ \ \ \ \ \ \ \ \ To\ be\ valid,\ the\ key\ must\n\ \ \ \ \ \ \ \ \ \ \ \ \ -\ satisfy\ all\ of\ the\ conditions\ above\ AND\n\ \ \ \ \ \ \ \ \ \ \ \ \ -\ have\ at\ least\ one\ Upper\ case\ character\ and\ at\ least\ one\ Lower\ case\ character,\n\ \ \ \ \ \ \ \ \ \ \ \ \ -\ not\ contain\ the\ user's\ name\n\ \ \ \ \ \ \ \ \ \ \ \ \ -\ contain\ either\ a\ '\#'\ or\ a\ '_',\ but\ not\ both.\n\ Challenge\:\ \ Same\ as\ completion,\ except\ that\ to\ be\ valid,\ the\ key\ must\n\ \ \ \ \ \ \ \ \ \ \ \ \ -\ satisfy\ all\ of\ the\ conditions\ above\ AND\n\ \ \ \ \ \ \ \ \ \ \ \ \ -\ have\ a\ mix\ of\ numbers\ and\ letters\n\ \ \ \ \ \ \ \ \ \ \ \ \ -\ not\ contain\ any\ "prefix"\ of\ the\ user's\ name\ of\ 2\ characters\ or\ more\ in\ any\ case.\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (eg\ if\ name\ is\ Peter,\ it\ does\ not\ contain\ "Pe",\ or\ "pE"\ or\ "Pet",\ or\ "pete"\ or\ "PEtE",\ or...)\n\n\ Hint.\ \ Look\ at\ the\ documentation\ in\ the\ String\ class.\n\ You\ will\ definitely\ find\ the\ length(),\ startsWith(...),\ and\ contains(...)\ methods\ to\ be\ helpful\n
comment1.params=
comment1.target=void\ doCore()
comment1.text=\n\ Asks\ user\ for\ key\ word\ and\ then\ checks\ if\ it\ is\ a\ valid\ key\ word.\n
comment2.params=key
comment2.target=void\ validateKeyCore(java.lang.String)
comment2.text=\ CORE\n\ Report\ "Valid"\ or\ "Invalid\:\ ...reason...."\n
comment3.params=
comment3.target=void\ doCompletion()
comment3.text=\ COMPLETION\n\ Asks\ user\ for\ key\ word\ and\ the\ name\ and\ then\ checks\ if\ it\ is\ a\ valid\ key\ word.\n
comment4.params=key\ name
comment4.target=void\ validateKeyCompletion(java.lang.String,\ java.lang.String)
comment4.text=\ COMPLETION\n\ Report\ that\ the\ key\ is\ valid\ or\ report\ ALL\ the\ rules\ that\ the\ key\ failed.\n
comment5.params=
comment5.target=void\ doChallenge()
comment5.text=\ Challenge\n\ Asks\ user\ for\ key\ word\ and\ the\ name\ and\ then\ checks\ if\ it\ is\ a\ valid\ key\ word.\n
comment6.params=key\ name
comment6.target=void\ validateKeyChallenge(java.lang.String,\ java.lang.String)
comment6.text=\ challenge\n\ Same\ as\ completion,\ except\ that\ to\ be\ valid,\ the\ key\ must\n\ \ \ \ \ \ \ \ \ \ \ \ \ -\ satisfy\ all\ of\ the\ conditions\ above\ AND\n\ \ \ \ \ \ \ \ \ \ \ \ \ -\ have\ a\ mix\ of\ numbers\ and\ letters\n\ \ \ \ \ \ \ \ \ \ \ \ \ -\ not\ contain\ any\ "prefix"\ of\ the\ user's\ name\ of\ 2\ characters\ or\ more\ in\ any\ case.\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (eg\ if\ name\ is\ Peter,\ it\ does\ not\ contain\ "Pe",\ or\ "pE"\ or\ "Pet",\ or\ "pete"\ or\ "PEtE",\ or...)\n
comment7.params=
comment7.target=void\ setupGUI()
numComments=8
